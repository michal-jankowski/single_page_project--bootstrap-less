@phone: ~"only screen and (min-width: 768px)"; // tylda służy tylko i wyłącznie do tego, żeby kompilator prawidłowo usunął cudzysłów z lewej i prawej strony
@tablet: ~"only screen and (min-width: 992px)";
@desktop: ~"only screen and (min-width: 1200px)";


// WYRÓWNANIE I POZYCJONOWANIE
.center-text {
	text-align: center;
}

.float-left {
	float: left;
}

.float-right {
	float: right;
}

.float-none {
	float: none;
}

.center-no-float { // element, który my wyłączony float i jego zawartość jest wyśrodkowana
	.float-none;
	.center-text;
}

.no-center-float {
	.float-left;
	text-align: initial; // resetujemy w ten sposób właściwość 'text-align', możemy w ten sposób wyzerować właściwość css 'text-align'
}

// WIDOCZNOŚĆ ELEMENTÓW
.invisible {
	display: none;
}

.inline-block {
	display: inline-block;
}

.block {
	display: block;
}

// WYRÓWNANIE W PIONIE
.center-vertical { // łatwe wyśrodkowanie elementów w pionie
	position: relative;
	top: 50%; // liczone względem górnej krawędzi obiektu
	transform: translateY(-50%); // przesuwamy o 50% względem środka samego obiektu
}

// ROZMIARY
.absolute-one-hundred-size {
	position: absolute;
	top: 0; // przyciągamy do górnej krawędzi
	left: 0; // przyciągamy do lewej krawędzi
	width: 100%;
	height: 100%;
}

.size(@width; @height) {
	width: @width;
	height: @height;
}

// LISTY
.list-style-none {
	list-style-type: none;
}

// RAMKI - OBRAMOWANIA
.section-border-top(@border-color: @basic-border-color) { // parametr '@border-color', bo ramki będą się różniły kolorem
	border-top-width: 1px;
	border-top-style: solid;
	border-top-color: @border-color;
}

.section-border-bottom(@border-color: @basic-border-color) { // parametr '@border-color', bo ramki będą się różniły kolorem
	border-bottom-width: 1px;
	border-bottom-style: solid;
	border-bottom-color: @border-color;
}

// ELEMENTY PŁYWAJĄCE - style przeznaczone do 'naprawiania' elementów obejmujących elementy pływające (pamiętaj, że takie elementy z elementami pływającymi nie mają wysokości)
.overflow-fix {
	overflow: auto; // to w wielu wypadkach pozwoli naprawić problem z wysokością elementu, który zawiera w środku pływające divy
}

.clearfix { // służy też do naprawiania wysokości kontenera z elementami pływającymi
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

// UKRYWANIE ELEMENTÓW PRZEZ ZMIANĘ KRYCIA
.hide {
	opacity: 0;
}

.show {
	opacity: 1;
}

// ZAOKRĄGLONE NAROŻNIKI
.border-radius-single(@radius) {
	border-radius: @radius;
	-moz-border-radius: @radius;
	-webkit-border-radius: @radius;
}

// PODSTAWOWE PRZEJŚCIE 0.2s
.basic-transition {
	transition: all 0.2s ease-in-out;
}

// ZMIENNE PRZEJŚCIE
.variable-transition(@length) {
	transition: all @length ease-in-out;
}

// TRANSLATE 3D - przekształcanie obiektów przez modyfikowanie ich położenia we wszystkich 3 osiach
.translate3d(@move-x; @move-y; @move-z) {
	transform: translateX(@move-x);
	transform: translateY(@move-y);
	transform: translateZ(@move-z);
}

// NAKŁADKA w szarym kolorze z pomniejszonym kryciem
.dark-overlay {
	content: "";
	z-index: 0; // 'niejako' lokalne zresetowanie
	.absolute-one-hundred-size;
	background: none repeat 0 0 rgba(30, 30, 30, 0.5); // po co ten 'repeat' - przecież i tak powtarzanie jest domyślne, po co odstęp - przecież jest 100% height i 100% width
}

// MIXINS DLA PRZYCISKÓW
.basic-button(@color; @background-color) {
	color: @color;
	background-color: @background-color;
	text-decoration: none; // tak jeszcze raz dla pewności, bo z odnośnikami mogą wystąpić czasem pewne problemy
	.inline-block;
	font-size: @basic-font-size;
	font-weight: 400;
	line-height: @basic-line-height;
	text-transform: uppercase;
}